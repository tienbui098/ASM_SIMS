@model IEnumerable<SIMS_ASM.Models.ClassCourseFaculty>
@using SIMS_ASM.Services
@inject IUserService UserService

@{
    ViewData["Title"] = "Class-Course-Faculty Management";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header bg-primary text-white py-3">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h5 class="m-0 font-weight-bold">
                    <i class="fas fa-chalkboard-teacher me-2"></i>Class-Course-Faculty Management
                </h5>
            </div>
            <div class="col-md-6 text-end">
                <a asp-action="CreateClassCourseFaculty" class="btn btn-light">
                    <i class="fas fa-plus-circle me-1"></i> Create New
                </a>
                <div class="btn-group">
                    <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="fas fa-cog me-1"></i> Management
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item" asp-controller="Student" asp-action="ManageStudent"><i class="fas fa-user-graduate me-2"></i>Students</a></li>
                        <li><a class="dropdown-item" asp-controller="Lecturer" asp-action="ManageLecturer"><i class="fas fa-chalkboard-teacher me-2"></i>Lecturers</a></li>
                        <li><a class="dropdown-item" asp-controller="Admin" asp-action="ManageAdmin"><i class="fas fa-user-shield me-2"></i>Admins</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" asp-controller="Major" asp-action="Index"><i class="fas fa-bookmark me-2"></i>Majors</a></li>
                        <li><a class="dropdown-item" asp-controller="Course" asp-action="Index"><i class="fas fa-book me-2"></i>Courses</a></li>
                        <li><a class="dropdown-item" asp-controller="Class" asp-action="Index"><i class="fas fa-user-group me-2"></i>Classes</a></li>
                        <li><a class="dropdown-item" asp-controller="Grade" asp-action="Index"><i class="fas fa-star me-2"></i>Grades</a></li>
                        <li><a class="dropdown-item" asp-controller="ClassCourseFaculty" asp-action="Index"><i class="fas fa-link me-2"></i>Class Courses</a></li>
                        <li><a class="dropdown-item" asp-controller="Enrollment" asp-action="Index"><i class="fas fa-clipboard-list me-2"></i>Enrollments</a></li>
                        <li><a class="dropdown-item" asp-controller="StudentClass" asp-action="Index"><i class="fas fa-users me-2"></i>Student Classes</a></li>
                    </ul>
                </div>
                <a asp-controller="Admin" asp-action="Index" class="btn btn-outline-light ms-2">
                    <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row mb-3 g-3">
            <div class="col-md-3">
                <select class="form-select" id="classFilter">
                    <option value="">All Classes</option>
                    @foreach (var cls in ViewBag.Classes as List<SIMS_ASM.Models.Class>)
                    {
                        <option value="@cls.ClassID" selected="@(cls.ClassID.ToString() == ViewBag.SelectedClass ? "selected" : null)">
                            @cls.ClassName
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <select class="form-select" id="courseFilter">
                    <option value="">All Courses</option>
                    @foreach (var course in ViewBag.Courses as List<SIMS_ASM.Models.Course>)
                    {
                        <option value="@course.CourseID" selected="@(course.CourseID.ToString() == ViewBag.SelectedCourse ? "selected" : null)">
                            @course.CourseName
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <select class="form-select" id="facultyFilter">
                    <option value="">All Lecturers</option>
                    @foreach (var faculty in await UserService.GetLecturersAsync())
                    {
                        <option value="@faculty.UserID" selected="@(faculty.UserID.ToString() == ViewBag.SelectedFaculty ? "selected" : null)">
                            @faculty.FullName
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <button class="btn btn-outline-secondary w-100" id="resetFiltersBtn">
                    <i class="fas fa-sync-alt me-2"></i> Reset Filters
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-hover" id="ccfTable">
                <thead class="table-dark">
                    <tr>
                        <th>ClassCourseFaculty ID</th>
                        <th>Class</th>
                        <th>Course</th>
                        <th>Lecturers</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ccf in Model)
                    {
                        <tr data-class="@ccf.ClassID" data-course="@ccf.CourseID" data-faculty="@ccf.UserID">
                            <td>@ccf.ClassCourseFacultyID</td>
                            <td>@ccf.Class?.ClassName</td>
                            <td>@ccf.Course?.CourseName</td>
                            <td>@ccf.User?.FullName</td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="EditClassCourseFaculty" asp-route-id="@ccf.ClassCourseFacultyID"
                                       class="btn btn-warning" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <form asp-action="DeleteClassCourseFaculty" asp-route-id="@ccf.ClassCourseFacultyID" method="post"
                                          style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this assignment?');">
                                        <button type="submit" class="btn btn-danger" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        .card-header {
            padding: 1rem 1.5rem;
        }

        /* Hide default DataTables controls */
        .dataTables_length, .dataTables_filter {
            display: none;
        }

        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
        }

        #resetFiltersBtn {
            height: 100%;
            white-space: nowrap;
        }

        .form-select, #resetFiltersBtn {
            height: calc(1.5em + 1rem + 2px);
            padding: 0.5rem 1rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#ccfTable').DataTable({
                responsive: true,
                dom: '<"top"f>rt<"bottom"ip>',
                columnDefs: [
                    { orderable: false, targets: [4] } // Disable sorting for Actions column
                ],
                language: {
                    info: "Showing _START_ to _END_ of _TOTAL_ assignments",
                    infoEmpty: "No assignments found",
                    emptyTable: "No assignment data available"
                }
            });

            // Class filter
            $('#classFilter').on('change', function() {
                var classId = $(this).val();
                table.rows().every(function() {
                    var row = this.node();
                    $(row).toggle(!classId || $(row).data('class') == classId);
                });
            });

            // Course filter
            $('#courseFilter').on('change', function() {
                var courseId = $(this).val();
                table.rows().every(function() {
                    var row = this.node();
                    $(row).toggle(!courseId || $(row).data('course') == courseId);
                });
            });

            // Faculty filter
            $('#facultyFilter').on('change', function() {
                var facultyId = $(this).val();
                table.rows().every(function() {
                    var row = this.node();
                    $(row).toggle(!facultyId || $(row).data('faculty') == facultyId);
                });
            });

            // Reset Filters button
            $('#resetFiltersBtn').on('click', function() {
                $('#classFilter, #courseFilter, #facultyFilter').val('');
                table.rows().every(function() {
                    $(this.node()).show();
                });
                table.search('').draw();
            });

            // Export button
            $('#exportBtn').click(function() {
                table.button('.buttons-excel').trigger();
            });

            $('#resetFiltersBtn').on('click', function() {
                $(this).find('i').addClass('fa-spin');

                // Thực hiện reset
                $('#customSearch').val('');
                $('#majorFilter').val('').trigger('change');
                table.search('').columns().search('').draw();

                // Dừng hiệu ứng sau 1s
                setTimeout(() => {
                    $(this).find('i').removeClass('fa-spin');
                }, 1000);
            });
        });
    </script>
}