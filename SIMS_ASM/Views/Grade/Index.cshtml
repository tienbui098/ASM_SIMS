@model IEnumerable<SIMS_ASM.Models.Grade>
@using SIMS_ASM.Services


@{
    ViewData["Title"] = "Grade Management";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header bg-primary text-white py-3">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h5 class="m-0 font-weight-bold">
                    <i class="fas fa-graduation-cap me-2"></i>Grade Management
                </h5>
            </div>
            <div class="col-md-6 text-end">
                <a asp-action="CreateGrade" class="btn btn-light">
                    <i class="fas fa-plus-circle me-1"></i> Create New
                </a>
                <a asp-controller="Admin" asp-action="Index" class="btn btn-outline-light ms-2">
                    <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row mb-3 g-3">
            <div class="col-md-3">
                <div class="input-group">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" class="form-control" id="studentSearch" placeholder="Search students...">
                </div>
            </div>
            <div class="col-md-3">
                <select class="form-select" id="classFilter">
                    <option value="">All Classes</option>
                    @foreach (var classItem in ViewBag.Classes as List<SIMS_ASM.Models.Class>)
                    {
                        <option value="@classItem.ClassID">@classItem.ClassName</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <select class="form-select" id="courseFilter">
                    <option value="">All Courses</option>
                    @foreach (var course in ViewBag.Courses as List<SIMS_ASM.Models.Course>)
                    {
                        <option value="@course.CourseID">@course.CourseName</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <button class="btn btn-outline-secondary w-100" id="resetFiltersBtn">
                    <i class="fas fa-sync-alt me-2"></i> Reset Filters
                </button>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-striped table-hover" id="gradesTable">
                <thead class="table-dark">
                    <tr>
                        <th>Student</th>
                        <th>Class</th>
                        <th>Course</th>
                        <th>Score</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-class="@item.Enrollment.ClassCourseFaculty.ClassID"
                            data-course="@item.Enrollment.ClassCourseFaculty.CourseID"
                            data-student="@item.Enrollment.User.FullName.ToLower()">
                            <td>@item.Enrollment.User.FullName</td>
                            <td>@item.Enrollment.ClassCourseFaculty.Class.ClassName</td>
                            <td>@item.Enrollment.ClassCourseFaculty.Course.CourseName</td>
                            <td>@item.Score</td>
                            <td>
                                <div class="btn-group btn-group-sm" role="group">
                                    <a asp-action="EditGrade" asp-route-id="@item.GradeID" class="btn btn-warning" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <form asp-action="DeleteGrade" asp-route-id="@item.GradeID" method="post"
                                          style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this grade?');">
                                        <button type="submit" class="btn btn-danger" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                    <a asp-action="GradeDetails" asp-route-id="@item.GradeID" class="btn btn-info" title="View Details">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        .card-header {
            padding: 1rem 1.5rem;
        }

        .input-group-text {
            background-color: #e9ecef;
        }

        /* Hide default DataTables controls */
        .dataTables_length, .dataTables_filter {
            display: none;
        }

        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
        }

        #resetFiltersBtn {
            height: 100%;
            white-space: nowrap;
        }

        .form-select, .form-control, #resetFiltersBtn {
            height: calc(1.5em + 1rem + 2px);
            padding: 0.5rem 1rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#gradesTable').DataTable({
                responsive: true,
                dom: '<"top"f>rt<"bottom"ip>',
                columnDefs: [
                    { orderable: false, targets: [4] } // Disable sorting for Actions column
                ],
                language: {
                    info: "Showing _START_ to _END_ of _TOTAL_ grades",
                    infoEmpty: "No grades found",
                    emptyTable: "No grade data available"
                }
            });

            // Student search
            $('#studentSearch').on('keyup', function() {
                var searchText = $(this).val().toLowerCase();
                table.rows().every(function() {
                    var row = this.node();
                    var studentName = $(row).data('student');
                    $(row).toggle(!searchText || studentName.includes(searchText));
                });
            });

            // Class filter
            $('#classFilter').on('change', function() {
                var classId = $(this).val();
                table.rows().every(function() {
                    var row = this.node();
                    $(row).toggle(!classId || $(row).data('class') == classId);
                });
            });

            // Course filter
            $('#courseFilter').on('change', function() {
                var courseId = $(this).val();
                table.rows().every(function() {
                    var row = this.node();
                    $(row).toggle(!courseId || $(row).data('course') == courseId);
                });
            });

            // Reset Filters button
            $('#resetFiltersBtn').on('click', function() {
                // Reset UI elements
                $('#studentSearch').val('');
                $('#classFilter, #courseFilter').val('').trigger('change');

                // Reset DataTables filters
                table.search('').draw();

                // Show all rows
                table.rows().every(function() {
                    $(this.node()).show();
                });

                // Focus on search box
                $('#studentSearch').focus();
            });
                        // Export button
            $('#exportBtn').click(function() {
                table.button('.buttons-excel').trigger();
            });

            $('#resetFiltersBtn').on('click', function() {
                $(this).find('i').addClass('fa-spin');

                // Thực hiện reset
                $('#customSearch').val('');
                $('#majorFilter').val('').trigger('change');
                table.search('').columns().search('').draw();

                // Dừng hiệu ứng sau 1s
                setTimeout(() => {
                    $(this).find('i').removeClass('fa-spin');
                }, 1000);
            });
        });
    </script>
}