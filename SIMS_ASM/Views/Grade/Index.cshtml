@model IEnumerable<SIMS_ASM.Models.Grade>

@{
    ViewData["Title"] = "Grade Management";
    Layout = "~/Views/Shared/_Layout1.cshtml";

}

<h1>Grade Management</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<div class="card mb-4">
    <div class="card-header">
        <div class="row">
            <div class="col-md-6">
                <i class="fas fa-table me-1"></i>
                Grades List
            </div>
            <div class="col-md-6 text-end">
                <a asp-action="CreateGrade" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create New
                </a>
                <a asp-controller="Admin" asp-action="Index" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Back 
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row mb-3">
            <div class="col-md-3">
                <label for="classFilter" class="form-label">Filter by Class:</label>
                <select id="classFilter" class="form-select">
                    <option value="">All Classes</option>
                    @foreach (var classItem in ViewBag.Classes as List<SIMS_ASM.Models.Class>)
                    {
                        <option value="@classItem.ClassID">@classItem.ClassName</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="courseFilter" class="form-label">Filter by Course:</label>
                <select id="courseFilter" class="form-select">
                    <option value="">All Courses</option>
                    @foreach (var course in ViewBag.Courses as List<SIMS_ASM.Models.Course>)
                    {
                        <option value="@course.CourseID">@course.CourseName</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label for="studentFilter" class="form-label">Filter by Student:</label>
                <input type="text" id="studentFilter" class="form-control" placeholder="Student name...">
            </div>
            <div class="col-md-3 d-flex align-items-end">
                <button id="resetFilters" class="btn btn-secondary">
                    <i class="fas fa-undo"></i> Reset Filters
                </button>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-bordered" id="gradesTable">
                <thead>
                    <tr>
                        <th>Student</th>
                        <th>Class</th>
                        <th>Course</th>
                        <th>Score</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr data-class="@item.Enrollment.ClassCourseFaculty.ClassID"
                            data-course="@item.Enrollment.ClassCourseFaculty.CourseID"
                            data-student="@item.Enrollment.User.FullName.ToLower()">
                            <td>
                                @Html.DisplayFor(modelItem => item.Enrollment.User.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Enrollment.ClassCourseFaculty.Class.ClassName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Enrollment.ClassCourseFaculty.Course.CourseName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Score)
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="EditGrade" asp-route-id="@item.GradeID" class="btn btn-sm btn-warning">
                                        <i class="fas fa-edit"></i> Edit
                                    </a>
                                    <a asp-action="DeleteGrade" asp-route-id="@item.GradeID" class="btn btn-sm btn-danger">
                                        <i class="fas fa-trash"></i> Delete
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        .btn-group {
            white-space: nowrap;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
                $(document).ready(function () {
            var table = $('#gradesTable').DataTable({
                responsive: true,
                columnDefs: [
                    { orderable: false, targets: -1 }
                ],
                initComplete: function() {
                    console.log('DataTable initialized'); // Kiểm tra khởi tạo
                }
            });

            // Class filter - sửa thành filter custom
            $('#classFilter').change(function () {
                var classId = $(this).val();
                table.rows().every(function() {
                    var row = this.node();
                    if (!classId || $(row).data('class') == classId) {
                        $(row).show();
                    } else {
                        $(row).hide();
                    }
                });
            });

            // Course filter - tương tự
            $('#courseFilter').change(function () {
                var courseId = $(this).val();
                table.rows().every(function() {
                    var row = this.node();
                    if (!courseId || $(row).data('course') == courseId) {
                        $(row).show();
                    } else {
                        $(row).hide();
                    }
                });
            });

            // Student filter - tìm kiếm theo tên
            $('#studentFilter').keyup(function () {
                var searchText = $(this).val().toLowerCase();
                table.rows().every(function() {
                    var row = this.node();
                    var studentName = $(row).data('student');
                    if (!searchText || studentName.includes(searchText)) {
                        $(row).show();
                    } else {
                        $(row).hide();
                    }
                });
            });

            // Reset filters
            $('#resetFilters').click(function () {
                $('#classFilter, #courseFilter').val('');
                $('#studentFilter').val('');
                table.rows().every(function() {
                    $(this.node()).show();
                });
                table.search('').draw();
            });
        });
    </script>
}