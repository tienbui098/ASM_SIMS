@model SIMS_ASM.Models.Enrollment
@{
    ViewData["Title"] = "Edit Enrollment";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header bg-primary text-white py-3">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h5 class="m-0 font-weight-bold">
                    <i class="fas fa-edit me-2"></i>Edit Enrollment
                </h5>
            </div>
            <div class="col-md-6 text-end">
                <a asp-action="Index" class="btn btn-light">
                    <i class="fas fa-list me-1"></i> Back to List
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="EditEnrollment" method="post" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger mb-4"></div>
            <input type="hidden" asp-for="EnrollmentID" />

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="UserID" class="form-label fw-bold">Student</label>
                        <select asp-for="UserID" class="form-select" id="studentSelect" asp-items="@(new SelectList(ViewBag.Students, "UserID", "FullName"))" onchange="updateClassCourseFaculties()" required>
                            <option value="">Select a Student</option>
                        </select>
                        <span asp-validation-for="UserID" class="text-danger"></span>
                        <div class="invalid-feedback">
                            Please select a student.
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ClassCourseFacultyID" class="form-label fw-bold">Class-Course-Faculty</label>
                        <select asp-for="ClassCourseFacultyID" class="form-select" id="classCourseFacultySelect" required>
                            <option value="">Select a Class-Course-Faculty</option>
                        </select>
                        <span asp-validation-for="ClassCourseFacultyID" class="text-danger"></span>
                        <div class="invalid-feedback">
                            Please select a class-course-faculty.
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="EnrollmentDate" class="form-label fw-bold">Enrollment Date</label>
                        <input asp-for="EnrollmentDate" type="date" class="form-control" required />
                        <span asp-validation-for="EnrollmentDate" class="text-danger"></span>
                        <div class="invalid-feedback">
                            Please provide a valid enrollment date.
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary me-2" id="submitButton" disabled>
                    <i class="fas fa-save me-1"></i> Save Changes
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-1"></i> Cancel
                </a>
            </div>
        </form>
    </div>
</div>

@section Styles {
    <style>
        .card-header {
            padding: 1rem 1.5rem;
        }

        .form-label {
            margin-bottom: 0.5rem;
        }

        .form-control, .form-select {
            padding: 0.5rem 1rem;
            height: calc(1.5em + 1rem + 2px);
            border: 1px solid #000;
        }

        .btn {
            padding: 0.5rem 1rem;
        }

        /* Validation states */
        .needs-validation .form-control:invalid,
        .needs-validation .form-select:invalid {
            border-color: #000;
        }

        .needs-validation .form-control:valid,
        .needs-validation .form-select:valid {
            border-color: #000;
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            // Initialize form with current values
            updateClassCourseFaculties();

            // Bootstrap 5 validation
            (function () {
                'use strict'

                var forms = document.querySelectorAll('.needs-validation')

                Array.prototype.slice.call(forms)
                    .forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            if (!form.checkValidity()) {
                                event.preventDefault()
                                event.stopPropagation()
                            }

                            form.classList.add('was-validated')
                        }, false)
                    })
            })()
        });

        function updateClassCourseFaculties() {
            var studentId = $('#studentSelect').val();
            var select = $('#classCourseFacultySelect');
            var submitButton = $('#submitButton');
            select.empty();
            select.append('<option value="">Select a Class-Course-Faculty</option>');
            submitButton.prop('disabled', true);

            if (studentId) {
                $.ajax({
                    url: '@Url.Action("GetClassCourseFacultiesByStudent", "Enrollment")',
                    type: 'GET',
                    data: { userId: studentId },
                    success: function (response) {
                        if (response.success) {
                            if (response.data.length === 0) {
                                alert('This student has not been assigned to any class with available Class-Course-Faculties. Please assign the student to a class first.');
                                window.location.href = response.redirectUrl;
                            } else {
                                $.each(response.data, function (index, item) {
                                    select.append('<option value="' + item.classCourseFacultyID + '">' + item.displayText + '</option>');
                                });
                                select.val('@Model.ClassCourseFacultyID');
                                submitButton.prop('disabled', false);
                            }
                        } else {
                            alert(response.message);
                            window.location.href = response.redirectUrl;
                        }
                    },
                    error: function () {
                        alert('Error loading Class-Course-Faculties.');
                    }
                });
            }
        }
    </script>
}