@model IEnumerable<SIMS_ASM.Models.ClassCourseFaculty>
@using SIMS_ASM.Services
@inject IUserService UserService

@{
    ViewData["Title"] = "Class-Course-Faculty Management";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header bg-primary text-white py-3">
        <div class="row align-items-center">
            <div class="col-md-6">
                <h5 class="m-0 font-weight-bold">
                    <i class="fas fa-chalkboard-teacher me-2"></i>Class Course Faculty View
                </h5>
            </div>
            <div class="col-md-6 text-end">
                <a asp-controller="Lecturer" asp-action="Index" class="btn btn-outline-light ms-2">
                    <i class="fas fa-arrow-left me-1"></i> Back to Dashboard
                </a>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show">
                @TempData["ErrorMessage"]
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Hiển thị thông tin người dùng -->
        <div class="mb-3">
            <strong>User: </strong> @ViewBag.CurrentUser.FullName
            <br />
            <strong>Role: </strong> @ViewBag.CurrentUser.Role
        </div>
        <div class="table-responsive">
            <table class="table table-striped table-hover" id="ccfTable">
                <thead class="table-dark">
                    <tr>
                        <th>Class Course Faculty ID</th>
                        <th>Class</th>
                        <th>Course</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ccf in Model)
                    {
                        <tr data-class="@ccf.ClassID" data-course="@ccf.CourseID" data-faculty="@ccf.UserID">
                            <td>@ccf.ClassCourseFacultyID</td>
                            <td>@ccf.Class?.ClassName</td>
                            <td>@ccf.Course?.CourseName</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />
    <style>
        .card-header {
            padding: 1rem 1.5rem;
        }
        /* Hide default DataTables controls */
        .dataTables_length, .dataTables_filter {
            display: none;
        }
        .btn-group-sm .btn {
            padding: 0.25rem 0.5rem;
        }
        #resetFiltersBtn {
            height: 100%;
            white-space: nowrap;
        }
        .form-select, #resetFiltersBtn {
            height: calc(1.5em + 1rem + 2px);
            padding: 0.5rem 1rem;
        }
    </style>
}

@section Scripts {
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#ccfTable').DataTable({
                responsive: true,
                dom: '<"top"f>rt<"bottom"ip>',
                columnDefs: [
                    { orderable: false, targets: [4] } // Disable sorting for Actions column
                ],
                language: {
                    info: "Showing _START_ to _END_ of _TOTAL_ assignments",
                    infoEmpty: "No assignments found",
                    emptyTable: "No assignment data available"
                }
            });

            // Class filter
            $('#classFilter').on('change', function () {
                var classId = $(this).val();
                table.rows().every(function () {
                    var row = this.node();
                    $(row).toggle(!classId || $(row).data('class') == classId);
                });
            });

            // Course filter
            $('#courseFilter').on('change', function () {
                var courseId = $(this).val();
                table.rows().every(function () {
                    var row = this.node();
                    $(row).toggle(!courseId || $(row).data('course') == courseId);
                });
            });

            // Faculty filter
            $('#facultyFilter').on('change', function () {
                var facultyId = $(this).val();
                table.rows().every(function () {
                    var row = this.node();
                    $(row).toggle(!facultyId || $(row).data('faculty') == facultyId);
                });
            });

            // Reset Filters button
            $('#resetFiltersBtn').on('click', function () {
                $('#classFilter, #courseFilter, #facultyFilter').val('');
                table.rows().every(function () {
                    $(this.node()).show(); // Hiển thị tất cả các hàng
                });
                table.search('').draw(); // Xóa tìm kiếm
            });
        });
    </script>
}
